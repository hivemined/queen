#!/bin/sh
##
# Worker instance configuration and function definition file.
#
#   This file must be located at '/usr/local/etc/entrypoint.conf'
##

MC_ROOT='/opt/minecraft'  # server working directory
MC_USER='minecraft'       # unprivileged user for server

TMPFS='/dev/shm'          # location of tmpfs mount
FIFO="${MC_ROOT}/fifo"    # location of fifo pipe

BIN_DIR='/mnt/minecraft'      # binaries and default configuration data
ETC_DIR='/mnt/minecraft-etc'  # server configuration
VAR_DIR='/mnt/minecraft-var'  # world and log data

FORGE_CFG="${BIN_DIR}/config"  # default Forge mod configuration
LOCAL_CFG="${ETC_DIR}/config"  # local mod configuration

WORLD_RAM="${TMPFS}/world"     # volatile world data (tmpfs)
WORLD_DISK="${VAR_DIR}/world"  # persistent world data (disk)

FORGE_LIB="${BIN_DIR}/libraries"  # Forge libraries
FORGE_MOD="${BIN_DIR}/mods"       # Forge mod binaries

# suid binary to fix file ownership
CHOWN_BIN='/usr/local/bin/mcchown'

#time until forced server shutdown on cleanup
MAX_WAIT=5

#special command overrides
CMD_SAVE_WORLD='save'
CMD_STOP_SERVER='stop'
CMD_RESET_CONFIG='reset-config'

###                           ###
#  COMMON FUNCTION DEFINITIONS  #
###                           ###

## send output to standard error
error () {
    echo "$@" >&2
}

## check if the tmpfs is mounted
tmpfs_exists () {
    mount -t tmpfs | grep -q "$TMPFS"
}

## check if the given process is running
is_running () {
    ps -A | grep -q "$1"
}

## copy directory contents
copy_dir () {
    echo -n "Copying '$1' to '$2' ... "
    mkdir -p "$2"
    rsync -a "$1/" "$2" && echo "Done." || error "Copy operation failed!"
}

## send command to fifo pipe
send_cmd () {
    case "$@" in

        # save the world to disk
        $CMD_SAVE_WORLD)
            echo "Saving world data ..."
            __fifo_write 'save-off'
            __fifo_write 'save-all'
            tmpfs_exists && copy_dir "$WORLD_RAM" "$WORLD_DISK"
            __fifo_write 'save-on'
            ;;

        # stop server gracefully
        $CMD_STOP_SERVER)
            echo "Stopping server now ..."
            __fifo_write 'say SERVER SHUTTING DOWN NOW!'
            __fifo_write 'stop'
            local count=0
            while is_running 'java$'; do
                if [ $count -lt $MAX_WAIT ]; then count=$(($count + 1)); else break; fi
                sleep 1
            done

            tmpfs_exists && copy_dir "$WORLD_RAM" "$WORLD_DISK"

            is_running 'java' && kill -9 $(ps -A | grep 'java' | awk '{print $1}')    
            kill -INT $$
            ;;

        # reset local mod configuration
        $CMD_RESET_CONFIG)
            copy_dir "$FORGE_CFG" "$LOCAL_CFG"
            ;;

        # pass other commands unmodified
        *)
            __fifo_write "$@"
            ;;
    esac
}

## write input to fifo
__fifo_write () {
    echo "$@" >"$FIFO"
}
